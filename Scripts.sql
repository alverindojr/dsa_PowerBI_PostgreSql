/* IT WAS NECESSARY CHANGE THE COLUMN NUMERO_FILHOS FROM INTEGER TO CHARACTER 
BECAUSE I HAVE A "NA" INFORMATION */
ALTER TABLE CAP16."TB_FUNC" ALTER COLUMN NUMERO_FILHOS TYPE CHARACTER VARYING(2)

-- RETURNING ALL ROWS FROM THE TABLE TB_FUNC
SELECT * FROM CAP16."TB_FUNC"

-- RETURNING THE FIRST 5 ROWS
SELECT * FROM CAP16."TB_FUNC" LIMIT 5

-- ANOTHER WAY TO RETURN THE FIRST 5 ROWS 
SELECT * FROM CAP16."TB_FUNC" FETCH FIRST 5 ROWS ONLY

-- RETURNING DISTINCT ROWS IN TB_FUNC
SELECT DISTINCT * FROM CAP16."TB_FUNC"

-- RETURNING DISTINCT ROWS IN NUMERO_FILHOS COLUMN
SELECT DISTINCT NUMERO_FILHOS FROM CAP16."TB_FUNC"

-- RETURNING ROWS WHERE THE AGE IS 30
SELECT * FROM CAP16."TB_FUNC" WHERE IDADE = 30

-- COUNTING HOW MANY ROWS WE HAVE
SELECT COUNT(*) FROM CAP16."TB_FUNC"

-- COUNTING THE NUMBER OF ROWS WITH THE AGE IS EQUAL 40
SELECT COUNT(*) FROM CAP16."TB_FUNC" WHERE IDADE = 40

-- COUNTING THE NUMBER OF ROWS WITH THE AGE IS DIFFERENT 40
SELECT COUNT(*) FROM CAP16."TB_FUNC" WHERE IDADE != 40

-- COUNTING THE NUMBER OF ROWS WITH THE AGE IS GREATER THAN 40
SELECT COUNT(*) FROM CAP16."TB_FUNC" WHERE IDADE > 40

-- COUNTING THE NUMBER OF ROWS WITH THE AGE IS GREATER AND EQUAL THAN 40
SELECT COUNT(*) FROM CAP16."TB_FUNC" WHERE IDADE >= 40

SELECT COUNT(*) FROM CAP16."TB_FUNC" WHERE IDADE < 40

-- LOGICAL OPERATOR AND 
SELECT * FROM CAP16."TB_FUNC" WHERE IDADE < 30 AND ESTADO_CIVIL = 'casado'

-- LOGICAL OPERATOR OR 
SELECT * FROM CAP16."TB_FUNC" WHERE IDADE < 30 OR ESTADO_CIVIL = 'solteiro'

-- BETWEEN 
SELECT * FROM CAP16."TB_FUNC" WHERE IDADE BETWEEN 30 AND 35

-- LIKE OPERATOR
SELECT * FROM CAP16."TB_FUNC" WHERE GRAU_INSTRUCAO LIKE '%medio'

-- USING CLAUSULE IN 
SELECT * FROM CAP16."TB_FUNC" WHERE IDADE IN (30, 29, 28)

-- ARE THERE NULL ROWS ?
SELECT * FROM CAP16."TB_FUNC" WHERE NUMERO_FILHOS IS NULL

-- UPDATE THE COLUMN NUMERO_FILHOS
UPDATE CAP16."TB_FUNC"
SET NUMERO_FILHOS = NULL 
WHERE NUMERO_FILHOS = 'NA'

COMMIT;

SELECT * FROM CAP16."TB_FUNC" WHERE NUMERO_FILHOS IS NULL

-- DELETE ROWS USING WHERE CLAUSULE
DELETE FROM CAP16."TB_FUNC"
WHERE NUMERO_FILHOS = 'NA'

COMMIT;

SELECT * FROM CAP16."TB_FUNC"
WHERE NUMERO_FILHOS = 'NA'

-- INSERT DATA 
INSERT INTO cap16."TB_FUNC"(
	id, estado_civil, grau_instrucao, numero_filhos, salario_hora, idade, reg_procedencia)
	VALUES (38, 'casado', 'ensino medio', 3, 4.50, 30, 'capital');
	
SELECT * FROM CAP16."TB_FUNC"
WHERE ID = 38

-- ORDER BY COMMAND
SELECT * FROM CAP16."TB_FUNC"
ORDER BY SALARIO_HORA

SELECT * FROM CAP16."TB_FUNC"
ORDER BY SALARIO_HORA ASC

SELECT * FROM CAP16."TB_FUNC"
ORDER BY SALARIO_HORA DESC

-- RETURN MIN AND MAX  AND AVERAGE
SELECT MIN(SALARIO_HORA) FROM CAP16."TB_FUNC"

SELECT MAX(SALARIO_HORA) FROM CAP16."TB_FUNC"

SELECT AVG(SALARIO_HORA) FROM CAP16."TB_FUNC"

-- GROUP BY
SELECT ROUND(AVG(SALARIO_HORA)), REG_PROCEDENCIA
FROM CAP16."TB_FUNC"
GROUP BY REG_PROCEDENCIA

/* Create the instruction that return the avg of the field idade, numero_filhos and  
grau_instrução of the employees that the salario_hora > avg(salario_hora).

Return where estado_civil is casado and reg_procedencia is capital with order by avg(idade). */

SELECT * FROM CAP16."TB_FUNC"

-- SUBQUERY
SELECT AVG(SALARIO_HORA)
FROM CAP16."TB_FUNC"

-- ANSWER
SELECT ROUND(AVG(IDADE)) MEDIA_IDADE, NUMERO_FILHOS, GRAU_INSTRUCAO 
FROM CAP16."TB_FUNC"
WHERE REG_PROCEDENCIA = 'capital' 
	AND ESTADO_CIVIL = 'casado'
	AND SALARIO_HORA > (SELECT AVG(SALARIO_HORA) FROM CAP16."TB_FUNC")
GROUP BY NUMERO_FILHOS, GRAU_INSTRUCAO
ORDER BY ROUND(AVG(IDADE)) DESC

-- RETURN ALL ROWS WHERE NUMERO_FILHOS IS 2
SELECT * FROM CAP16."TB_FUNC"
WHERE NUMERO_FILHOS = '2'
-- OR
SELECT * FROM CAP16."TB_FUNC"
WHERE CAST(NUMERO_FILHOS AS INTEGER) = 2

-- CREATING A NEW TABLE TO DO SOME JOINS 
CREATE TABLE cap16."TB_ENDERECO"
(
    "id_end" integer NOT NULL,
    "rua" character varying(30),
    "numero" character varying(30),
    "bairro" character varying(30),
    "cep" character varying(10),
    "estado" character varying(30),
    "pais" character varying(30),
    "id_func" integer,
    PRIMARY KEY ("id_end")
)

TABLESPACE pg_default;

ALTER TABLE cap16."TB_ENDERECO"
    OWNER to postgres;

INSERT INTO cap16."TB_ENDERECO"(
	"id_end", "rua", "numero", "bairro", "cep", "estado", "pais", "id_func")
	VALUES (1001, 'Jaguar', 40, 'Tijuca', '24239-900', 'Rio de Janeiro', 'Brasil', 2);
	
INSERT INTO cap16."TB_ENDERECO"(
	"id_end", "rua", "numero", "bairro", "cep", "estado", "pais", "id_func")
	VALUES (1002, 'Mercedes Benz', 140, 'Centro', '12098-900', 'Minas Gerais', 'Brasil', 6);

INSERT INTO cap16."TB_ENDERECO"(
	"id_end", "rua", "numero", "bairro", "cep", "estado", "pais", "id_func")
	VALUES (1003, 'BMW', 20, 'Tijuca', '23232-900', 'Rio de Janeiro', 'Brasil', 3);
	
INSERT INTO cap16."TB_ENDERECO"(
	"id_end", "rua", "numero", "bairro", "cep", "estado", "pais", "id_func")
	VALUES (1004, 'Ferrari', 32, 'Centro', '99872-900', 'Minas Gerais', 'Brasil', 11);

INSERT INTO cap16."TB_ENDERECO"(
	"id_end", "rua", "numero", "bairro", "cep", "estado", "pais", "id_func")
	VALUES (1005, 'McLaren', 45, 'Centro', '43982-900', 'Minas Gerais', 'Brasil', 17);

-- RETURN AVG(SALARIO_HORA) BY ESTADO
SELECT ROUND(AVG(SALARIO_HORA)) MEDIA_SALARIO_HORA, ENDE.ESTADO  
FROM CAP16."TB_FUNC" FUNC 
INNER JOIN CAP16."TB_ENDERECO" ENDE
ON FUNC.ID = ENDE.ID_FUNC
GROUP BY ENDE.ESTADO

--RETURNING VIEW
SELECT * FROM CAP16."VW_FUNC"

